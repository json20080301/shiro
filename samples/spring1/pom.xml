<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<groupId>org.apache.shiro.samples</groupId>
	<version>1.4.0-SNAPSHOT</version>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>samples-spring1</artifactId>
	<name>Apache Shiro :: Samples :: Spring Quickstart</name>
	<description>
    	Spring-based application sample demonstrating Shiro's capabilities.
    </description>

	<properties>
        <!-- These spring-boot modules require spring 4 -->
		<spring-boot.version>1.4.3.RELEASE</spring-boot.version>
		<shiro.version>1.4.0-RC2</shiro.version>
		
		<!-- Test 3rd-party dependencies: -->
		<easymock.version>3.4</easymock.version>
		<gmaven.version>1.5</gmaven.version>
		<groovy.version>2.4.7</groovy.version>
		<junit.version>4.12</junit.version>
		<shiro.version>1.4.0-RC2</shiro.version>
		<java.version>1.7</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<hibernate.version>4.2.21.Final</hibernate.version>
        <!-- so we can mock static methods in 3rd party libraries that sometimes don't use proper interfaces
             ahem, hazelcast, ahem... -->
		<powermock.version>1.6.6</powermock.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		        <!-- Automatically inherited dependencies.  The only ones that should be in here
             are test dependencies.  Actual compile or runtime dependencies should be
             explicitly declared in a child module, referencing the dependency defined
             in this file's <dependencyManagement> section. -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>java-hamcrest</artifactId>
			<version>2.0.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${easymock.version}</version>
			<scope>test</scope>
		</dependency>
        <!-- Writing tests in groovy is fast!: -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- <dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>runtime</scope>
		</dependency> -->
	</dependencies>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring-dependencies</artifactId>
				<version>${shiro.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<mainClass>org.apache.shiro.samples.spring.CliApp</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>